# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here node:8.11.2
      - image: circleci/node:9.11.2
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    environment:
      - SOURCE_BRANCH: master
      - TARGET_BRANCH: master

    # branches:
    #   ignore:
    #     - master

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          root: ~/repo
          paths:
            - ./**

  deploy-to-dev:
    docker:
      # specify the version you desire here  
      # below favicon
      # cp -a .gitignore out/.
      # cp -a .gcloudignore out/.
      # node:8.11.2
      - image: circleci/node:9.11.2

    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: ~/repo
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Deploy
          command: |
            git config --global user.email jrt@gtz.com
            git config --global user.name johntom

            echo "Cloning Dev"
            git clone https://johntom:giDoghouse77@github.com/johntom/fecMRG2-Dev.git out

            cd out
            git checkout $TARGET_BRANCH || git checkout --orphan $TARGET_BRANCH
            git rm -rf .
            cd ..
           
            cp -a server/index.html .
            cp -aR *.* out/.

            cd out

            git add -A
            git commit -m "Automated deployment to GitHub Pages: ${CIRCLE_SHA1}" --allow-empty

            git push origin $TARGET_BRANCH
      - run:
          name: Finished
          command: |
            echo "Finished!"

  deploy-to-stage:
    docker:
      # specify the version you desire here  
      # below favicon
      # cp -a .gitignore out/.
      # cp -a .gcloudignore out/.
      # node:8.11.2
      - image: circleci/node:9.11.2

    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: ~/repo
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Deploy
          command: |
            #git config --global user.email $GH_EMAIL
            #git config --global user.name $GH_NAME
            git config --global user.email jrt@gtz.com
            git config --global user.name johntom

            echo "Cloning Staging"
            # git clone https://github.com/johntom/fecMRG2-Staging.git out
            git clone https://johntom:giDoghouse77@github.com/johntom/fecMRG2-Staging.git out

            cd out
            git checkout $TARGET_BRANCH || git checkout --orphan $TARGET_BRANCH
            git rm -rf .
            cd ..

            sudo npm install aurelia-cli -g

            mkdir -p www
            cp -a server/index.html .

            echo "Building for Staging"
            # au build --env stage
            au build

            mkdir -p out/www
            mkdir -p out/www/scripts && cp -a scripts/. out/www/scripts/.
            mkdir -p out/www/styles && cp -a styles/. out/www/styles/.
            mkdir -p out/.circleci
            cp -a index.html out/www/.
            cp -a favicon.ico out/www/.

           
            cp -a server/app.js out/.
            cp -a server/app.yaml out/.
            cp -a server/package.json out/.
            cp -a server/.circleci/config.yml out/.circleci/config.yml

            cd out

            git add -A
            git commit -m "Automated deployment to GitHub Pages: ${CIRCLE_SHA1}" --allow-empty

            git push origin $TARGET_BRANCH
      - run:
          name: Finished
          command: |
            echo "Finished!"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
      - deploy-to-stage:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - can-deploy-to-stage:
          type: approval
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - deploy-to-stage:
          requires:
            - can-deploy-to-stage
          filters:
            branches:
              only:
                - master
